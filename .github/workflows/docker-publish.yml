# Workflow name as it appears in GitHub Actions tab
name: Docker Publish to Docker Hub

# Trigger this workflow when code is pushed to "master" or when tags like v1.0.0 are pushed
on:
  push:
    branches: [ "master" ]
    tags: [ "v*.*.*" ] # Optional: Helps you push semver-based Docker tags

# Set environment variables used throughout the workflow
env:
  REGISTRY: docker.io # Docker Hub registry
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/edx-briselle-backend # Image path on Docker Hub

jobs:
  build-and-push:
    runs-on: ubuntu-latest # GitHub-hosted Linux runner

    steps:
      # Step 1: Checkout your repository code
      - name: Checkout source code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx for advanced features like cache, multi-arch builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub using secrets you configured
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub username stored as secret
          password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub password or PAT stored as secret

      # Step 4: Extract Docker image metadata (tags, labels) automatically
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Step 5: Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Current directory as Docker build context
          push: true # Actually push the image to Docker Hub
          tags: ${{ steps.meta.outputs.tags }} # Automatically generate image tags
          labels: ${{ steps.meta.outputs.labels }} # Automatically add metadata labels
